services:
  frontend:
    build:
      context: .
      dockerfile: Dockerfile.frontend
    ports:
      - "80:80"
    depends_on:
      - backend
      - youtube_api
    networks:
      - app-network

  backend:
    build:
      context: ./src/backend
      dockerfile: Dockerfile
    command: python app.py # API 5000 main back
    volumes:
      - ./src/backend:/app
    ports:
      - "5000:5000"
    container_name: backend
    networks:
      - app-network

  youtube_api:
    build:
      context: ./src/backend
      dockerfile: Dockerfile
    command: python api_sc.py # API 5001
    volumes:
      - ./src/backend:/app
    ports:
      - "5001:5001"
    container_name: youtube_api
    networks:
      - app-network

  coder:
    build:
      context: ./src/backend
      dockerfile: Dockerfile
    command: python coder.py # API 5002
    volumes: 
      - ./src/backend:/app
    ports:
      - "5002:5002"
    container_name: coder
    networks:
      - app-network

  redis:
    image: redis:alpine
    networks:
      - app-network

  celery_worker:
    build:
      context: ./src/backend
      dockerfile: Dockerfile
    command: celery -A api_sc.celery worker --loglevel=info  # ⬅ вот эта строка!
    volumes:
      - ./src/backend:/app
      - ./src/backend/youtube_scrapper_for_internship_main/databases:/app/youtube_scrapper_for_internship_main/databases
    depends_on:
      - redis
      - youtube_api
    networks:
      - app-network
  
  postgres:
    image: postgres:16
    container_name: postgres
    restart: unless-stopped
    environment:
      POSTGRES_USER: ArturKarwatka
      POSTGRES_PASSWORD: kovex
      POSTGRES_DB: youtube_db
    ports:
      - "5432:5432"
    networks:
      - app-network
    volumes:
      - postgres_data:/var/lib/postgresql/data

volumes:
  postgres_data:


networks:
  app-network:
    driver: bridge
