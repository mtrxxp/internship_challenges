import time
import os
from keywords import keywords_by_lang
from youtube_api import search_channels, get_channel_info
from database import init_db, save_channel, close_db, export_to_csv
from config import LANGUAGE_REGIONS, MIN_SUBSCRIBERS, REQUEST_DELAY
from database import DATABASE

def main():
    print("üìÇ –ò—Å–ø–æ–ª—å–∑—É–µ–º–∞—è –±–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö:", os.path.abspath(DATABASE))
    init_db()  # ‚úÖ –û–ë–Ø–ó–ê–¢–ï–õ–¨–ù–û –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º —Ç–∞–±–ª–∏—Ü—É

    for lang, keywords in keywords_by_lang.items():
        print(f"\nüîç Searching for: {lang.upper()}")
        for query in keywords:
            print(f"‚Üí Query: {query}")
            try:
                channel_ids = search_channels(query, max_results=10)
                print(f"üîé –ù–∞–π–¥–µ–Ω–æ {len(channel_ids)} –∫–∞–Ω–∞–ª–æ–≤")
                for cid in channel_ids:
                    time.sleep(REQUEST_DELAY)
                    info = get_channel_info(cid)
                    print(f"üì¶ Info: {info}")  # ‚ö†Ô∏è –ü—Ä–æ–≤–µ—Ä–∫–∞, —á—Ç–æ info –Ω–µ None

                    if info and info["subscribers"] >= MIN_SUBSCRIBERS:
                        save_channel(info)
                        print(f"‚úîÔ∏è –°–æ—Ö—Ä–∞–Ω—ë–Ω: {info['title']} | {info['subscribers']} subs")
                    else:
                        print(f"‚ÑπÔ∏è –ü—Ä–æ–ø—É—â–µ–Ω: –ø–æ–¥–ø–∏—Å—á–∏–∫–æ–≤ –º–µ–Ω—å—à–µ {MIN_SUBSCRIBERS}")
            except Exception as e:
                print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞: {e}")

    export_to_csv()
    close_db()
    print("‚úÖ –ì–æ—Ç–æ–≤–æ!")

if __name__ == '__main__':
    main()
