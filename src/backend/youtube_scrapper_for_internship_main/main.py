import time
import os
import sys
sys.path.append("/app")
from youtube_scrapper_for_internship_main.keywords import keywords_by_lang
from youtube_scrapper_for_internship_main.youtube_api import search_channels, get_channel_info
from youtube_scrapper_for_internship_main.database import init_db, save_channel, close_db, export_to_csv, DATABASE
from youtube_scrapper_for_internship_main.config import LANGUAGE_REGIONS, MIN_SUBSCRIBERS, REQUEST_DELAY
from youtube_scrapper_for_internship_main.utils import split_tables
from youtube_scrapper_for_internship_main.state import is_stop_flag_set

def main():
    print("üìÇ –ò—Å–ø–æ–ª—å–∑—É–µ–º–∞—è –±–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö:", os.path.abspath(DATABASE))
    init_db()

    try:
        for lang, keywords in keywords_by_lang.items():
            print(f"\nüîç Searching for: {lang.upper()}")
            for query in keywords:
                print(f"‚Üí Query: {query}")
                if is_stop_flag_set():
                    print("üõë –°–∫—Ä–∞–ø–∏–Ω–≥ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º")
                    return
                try:
                    channel_ids = search_channels(query, max_results=10)
                    print(f"üîé –ù–∞–π–¥–µ–Ω–æ {len(channel_ids)} –∫–∞–Ω–∞–ª–æ–≤")
                    for cid in channel_ids:
                        time.sleep(REQUEST_DELAY)
                        info = get_channel_info(cid)
                        print(f"üì¶ Info: {info}")

                        if info and info["subscribers"] >= MIN_SUBSCRIBERS:
                            save_channel(info)
                            print(f"‚úîÔ∏è –°–æ—Ö—Ä–∞–Ω—ë–Ω: {info['title']} | {info['subscribers']} subs")
                        else:
                            print(f"‚ÑπÔ∏è –ü—Ä–æ–ø—É—â–µ–Ω: –ø–æ–¥–ø–∏—Å—á–∏–∫–æ–≤ –º–µ–Ω—å—à–µ {MIN_SUBSCRIBERS}")
                except Exception as e:
                    print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞: {e}")

    finally:
        print("üíæ –°–æ—Ö—Ä–∞–Ω—è–µ–º CSV –∏ —Ä–∞–∑–±–∏–≤–∞–µ–º —Ç–∞–±–ª–∏—Ü—ã...")
        close_db()
        print("‚úÖ –ì–æ—Ç–æ–≤–æ!")

if __name__ == '__main__':
    main()
